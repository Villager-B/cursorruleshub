name: Deploy to GitHub Pages

on:
  # 24時間ごとの実行
  schedule:
    - cron: '30 0 * * *'  # UTC 00:30に実行
  # 手動実行用
  workflow_dispatch:
  # mainブランチへのプッシュ時
  push:
    branches:
      - main

# 必要な権限を設定
permissions:
  contents: write
  pages: write
  id-token: write

# 同時実行を防止
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  update-and-deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Update data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ERROR_LOG_LEVEL: "INFO"
      run: |
        echo "Starting data collection..."
        python scripts/github_api.py
      continue-on-error: false

    - name: Verify data directory and files
      run: |
        if [ ! -d "data" ]; then
          echo "Error: Data directory not found"
          exit 1
        fi
        if [ ! -f "data/cursorrules_data.json" ]; then
          echo "Error: cursorrules_data.json not found"
          exit 1
        fi
        echo "Data directory contents:"
        ls -la data/
        echo "Verifying JSON file..."
        python -c "import json; json.load(open('data/cursorrules_data.json'))"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Prepare deployment directory
      run: |
        mkdir -p dist
        # srcディレクトリの内容をコピー
        if [ -d "src" ]; then
          cp -r src/* dist/
        else
          echo "Error: src directory not found"
          exit 1
        fi
        # dataディレクトリをコピー
        cp -r data dist/
        echo "Deployment directory structure:"
        ls -la dist/
        echo "Data directory contents:"
        ls -la dist/data/
        
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist

    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }} 